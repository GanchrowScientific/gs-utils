{"version":3,"file":"formatter.js","sourceRoot":"","sources":["formatter.ts"],"names":["format","format.getRuleProvider","format.applyEdits","fixupParentReferences","fixupParentReferences.walk"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport * as ts from \"typescript\";\nimport {createDefaultFormatCodeOptions} from \"./utils\";\n\n// from https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#pretty-printer-using-the-ls-formatter\n\n// Note: this uses ts.formatting which is part of the typescript 1.4 package but is not currently\n//       exposed in the public typescript.d.ts. The typings should be exposed in the next release.\nexport default function format(fileName: string, text: string, options = createDefaultFormatCodeOptions()) {\n    \"use strict\";\n\n    // Parse the source text\n    let sourceFile = ts.createSourceFile(fileName, text, ts.ScriptTarget.Latest, (<any>/* backward compat for typescript-1.4.1 */\"0\"));\n    fixupParentReferences(sourceFile);\n\n    // Get the formatting edits on the input sources\n    let edits = (<any>ts).formatting.formatDocument(sourceFile, getRuleProvider(options), options);\n\n    // Apply the edits on the input code\n    return applyEdits(text, edits);\n\n    function getRuleProvider(options: ts.FormatCodeOptions) {\n        // Share this between multiple formatters using the same options.\n        // This represents the bulk of the space the formatter uses.\n        let ruleProvider = new (<any>ts).formatting.RulesProvider();\n        ruleProvider.ensureUpToDate(options);\n        return ruleProvider;\n    }\n\n    function applyEdits(text: string, edits: ts.TextChange[]): string {\n        // Apply edits in reverse on the existing text\n        let result = text;\n        for (let i = edits.length - 1; i >= 0; i--) {\n            let change = edits[i];\n            let head: string;\n            if (typeof change.span.start === \"number\") {\n                head = result.slice(0, change.span.start);\n            } else {\n                // backward compat for typescript-1.4.1\n                head = result.slice(0, (<any>change.span.start)());\n            }\n            let tail: string;\n            if (typeof change.span.start === \"number\") {\n                tail = result.slice(change.span.start + change.span.length);\n            } else {\n                // backward compat for typescript-1.4.1\n                tail = result.slice((<any>change.span.start)() + (<any>change.span.length)());\n            }\n            result = head + change.newText + tail;\n        }\n        return result;\n    }\n}\n\nfunction fixupParentReferences(sourceFile: ts.SourceFile) {\n    \"use strict\";\n\n    let parent: ts.Node = sourceFile;\n\n    function walk(n: ts.Node): void {\n        n.parent = parent;\n\n        let saveParent = parent;\n        parent = n;\n        ts.forEachChild(n, walk);\n        parent = saveParent;\n    }\n\n    ts.forEachChild(sourceFile, walk);\n}\n"]}