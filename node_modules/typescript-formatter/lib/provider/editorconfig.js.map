{"version":3,"file":"editorconfig.js","sourceRoot":"","sources":["editorconfig.ts"],"names":["makeFormatCodeOptions"],"mappings":"AAEA,YAAY,CAAC;AAIb,IAAY,YAAY,WAAM,cAAc,CAAC,CAAA;AAI7C,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAE/B,+BAA8C,QAAgB,EAAE,IAAa,EAAE,aAAmC;IAC9GA,YAAYA,CAACA;IAEbA,EAAEA,CAACA,CAACA,IAAIA,CAACA,OAAOA,IAAIA,IAAIA,CAACA,OAAOA,IAAIA,CAACA,kBAAkBA,CAACA,CAACA,CAACA;QACtDA,OAAOA,CAACA,GAAGA,CAACA,+CAA+CA,CAACA,CAACA;QAC7DA,kBAAkBA,GAAGA,IAAIA,CAACA;IAC9BA,CAACA;IAEDA,MAAMA,CAACA,YAAYA;SACdA,KAAKA,CAACA,QAAQA,CAACA;SACfA,IAAIA,CAACA,UAAAA,MAAMA;QACRA,EAAEA,CAACA,CAACA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CAACA,CAACA;YACnCA,MAAMA,CAACA,aAAaA,CAACA;QACzBA,CAACA;QACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA,CAACA;YACfA,OAAOA,CAACA,GAAGA,CAACA,kBAAkBA,GAAGA,QAAQA,GAAGA,QAAQA,GAAGA,IAAIA,GAAGA,IAAIA,CAACA,SAASA,CAACA,MAAMA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA,CAACA;QACnGA,CAACA;QAEDA,EAAEA,CAACA,CAACA,MAAMA,CAACA,YAAYA,KAAKA,KAAKA,CAACA,CAACA,CAACA;YAChCA,aAAaA,CAACA,mBAAmBA,GAAGA,KAAKA,CAACA;QAI9CA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,MAAMA,CAACA,WAAWA,KAAKA,QAAQA,CAACA,CAACA,CAACA;YAChDA,aAAaA,CAACA,mBAAmBA,GAAGA,IAAIA,CAACA;YACzCA,aAAaA,CAACA,UAAUA,GAAGA,MAAMA,CAACA,WAAWA,CAACA;QAClDA,CAACA;QACDA,EAAEA,CAACA,CAACA,MAAMA,CAACA,WAAWA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YAC9BA,aAAaA,CAACA,gBAAgBA,GAAGA,IAAIA,CAACA;QAC1CA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,MAAMA,CAACA,WAAWA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YACrCA,aAAaA,CAACA,gBAAgBA,GAAGA,IAAIA,CAACA;QAC1CA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,MAAMA,CAACA,WAAWA,KAAKA,MAAMA,CAACA,CAACA,CAACA;YACvCA,aAAaA,CAACA,gBAAgBA,GAAGA,MAAMA,CAACA;QAC5CA,CAACA;QAEDA,MAAMA,CAACA,aAAaA,CAACA;IACzBA,CAACA,CAACA,CAACA;AACXA,CAACA;AArCD;uCAqCC,CAAA","sourcesContent":["/// <reference path=\"../typings/editorconfig.d.ts\" />\n\n\"use strict\";\n\nimport * as ts from \"typescript\";\n\nimport * as editorconfig from \"editorconfig\";\n\nimport {Options} from \"../\";\n\nlet emitBaseDirWarning = false;\n\nexport default function makeFormatCodeOptions(fileName: string, opts: Options, formatOptions: ts.FormatCodeOptions): Promise<ts.FormatCodeOptions> {\n    \"use strict\";\n\n    if (opts.verbose && opts.baseDir && !emitBaseDirWarning) {\n        console.log(\"editorconfig is not supported baseDir options\");\n        emitBaseDirWarning = true;\n    }\n\n    return editorconfig\n        .parse(fileName)\n        .then(config => {\n            if (Object.keys(config).length === 0) {\n                return formatOptions;\n            }\n            if (opts.verbose) {\n                console.log(\"editorconfig: \\n\" + \"file: \" + fileName + \"\\n\" + JSON.stringify(config, null, 2));\n            }\n\n            if (config.indent_style === \"tab\") {\n                formatOptions.ConvertTabsToSpaces = false;\n                // if (typeof config.tab_width === \"number\") {\n                // \toptions.TabSize = config.tab_width;\n                // }\n            } else if (typeof config.indent_size === \"number\") {\n                formatOptions.ConvertTabsToSpaces = true;\n                formatOptions.IndentSize = config.indent_size;\n            }\n            if (config.end_of_line === \"lf\") {\n                formatOptions.NewLineCharacter = \"\\n\";\n            } else if (config.end_of_line === \"cr\") {\n                formatOptions.NewLineCharacter = \"\\r\";\n            } else if (config.end_of_line === \"crlf\") {\n                formatOptions.NewLineCharacter = \"\\r\\n\";\n            }\n\n            return formatOptions;\n        });\n}\n"]}