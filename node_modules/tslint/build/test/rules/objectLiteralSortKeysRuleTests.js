var Lint = require("../lint");
describe("<object-literal-sort-keys>", function () {
    var SortedKeyRule = Lint.Test.getRule("object-literal-sort-keys");
    var fileName = "rules/objectliteralsortkeys.test.ts";
    var failureString = SortedKeyRule.FAILURE_STRING;
    it("forbids unsorted keys in object literals", function () {
        var actualFailures = Lint.Test.applyRuleOnFile(fileName, SortedKeyRule);
        var createFailure1 = Lint.Test.createFailuresOnFile(fileName, failureString + "a'");
        var createFailure2 = Lint.Test.createFailuresOnFile(fileName, failureString + "a'");
        var createFailure3 = Lint.Test.createFailuresOnFile(fileName, failureString + "aa'");
        var createFailure4 = Lint.Test.createFailuresOnFile(fileName, failureString + "b'");
        var createFailure5 = Lint.Test.createFailuresOnFile(fileName, failureString + "asdf'");
        var createFailure6 = Lint.Test.createFailuresOnFile(fileName, failureString + "asdfn'");
        var expectedFailures = [
            createFailure1([8, 5], [8, 6]),
            createFailure2([20, 5], [20, 6]),
            createFailure3([37, 9], [37, 11]),
            createFailure4([56, 5], [56, 6]),
            createFailure5([68, 5], [68, 9]),
            createFailure6([78, 5], [78, 10])
        ];
        Lint.Test.assertFailuresEqual(actualFailures, expectedFailures);
    });
});
