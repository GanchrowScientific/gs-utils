var Lint = require("../lint");
describe("<no-use-before-declare>", function () {
    var Rule = Lint.Test.getRule("no-use-before-declare");
    var fileName = "rules/nousebeforedeclare.test.ts";
    it("restricts usage before declaration", function () {
        var actualFailures = Lint.Test.applyRuleOnFile(fileName, Rule);
        assert.equal(actualFailures.length, 8);
    });
    it("restricts usage of imports before declaration", function () {
        var actualFailures = Lint.Test.applyRuleOnFile(fileName, Rule);
        var failure1 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("$"))([1, 1], [1, 2]);
        var failure2 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("foo1"))([35, 17], [35, 21]);
        var failure3 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("foo2"))([36, 17], [36, 21]);
        var failure4 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("foo3"))([37, 17], [37, 21]);
        var failure5 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("map"))([38, 5], [38, 8]);
        Lint.Test.assertContainsFailure(actualFailures, failure1);
        Lint.Test.assertContainsFailure(actualFailures, failure2);
        Lint.Test.assertContainsFailure(actualFailures, failure3);
        Lint.Test.assertContainsFailure(actualFailures, failure4);
        Lint.Test.assertContainsFailure(actualFailures, failure5);
    });
    it("restricts usage of variables before declaration", function () {
        var actualFailures = Lint.Test.applyRuleOnFile(fileName, Rule);
        var failure1 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("varb"))([3, 12], [3, 16]);
        var failure2 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("j"))([13, 9], [13, 10]);
        Lint.Test.assertContainsFailure(actualFailures, failure1);
        Lint.Test.assertContainsFailure(actualFailures, failure2);
    });
    it("restricts exporting variables before declaration", function () {
        var actualFailures = Lint.Test.applyRuleOnFile(fileName, Rule);
        var failure1 = Lint.Test.createFailuresOnFile(fileName, makeFailureString("undeclaredA"))([52, 5], [52, 16]);
        Lint.Test.assertContainsFailure(actualFailures, failure1);
    });
    function makeFailureString(varName) {
        return "" + Rule.FAILURE_STRING_PREFIX + varName + Rule.FAILURE_STRING_POSTFIX;
    }
});
