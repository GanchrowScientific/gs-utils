var Lint = require("../lint");
describe("PMD Formatter", function () {
    var TEST_FILE = "formatters/pmdFormatter.test.ts";
    var sourceFile;
    var formatter;
    before(function () {
        var Formatter = Lint.Test.getFormatter("pmd");
        sourceFile = Lint.Test.getSourceFile(TEST_FILE);
        formatter = new Formatter();
    });
    it("formats failures", function () {
        var maxPosition = sourceFile.getFullWidth();
        var failures = [
            new Lint.RuleFailure(sourceFile, 0, 1, "first failure", "first-name"),
            new Lint.RuleFailure(sourceFile, 2, 3, "&<>'\" should be escaped", "escape"),
            new Lint.RuleFailure(sourceFile, maxPosition - 1, maxPosition, "last failure", "last-name"),
            new Lint.RuleFailure(sourceFile, 0, maxPosition, "full failure", "full-name")
        ];
        var expectedResult = "<pmd version=\"tslint\">" +
            "<file name=\"formatters/pmdFormatter.test.ts\">" +
            "<violation begincolumn=\"1\" beginline=\"1\" priority=\"1\" rule=\"first failure\"> " +
            "</violation>" +
            "</file>" +
            "<file name=\"formatters/pmdFormatter.test.ts\">" +
            "<violation begincolumn=\"3\" beginline=\"1\" priority=\"1\" rule=\"&amp;&lt;&gt;&#39;&quot; should be escaped\"> " +
            "</violation>" +
            "</file>" +
            "<file name=\"formatters/pmdFormatter.test.ts\">" +
            "<violation begincolumn=\"3\" beginline=\"6\" priority=\"1\" rule=\"last failure\"> " +
            "</violation>" +
            "</file>" +
            "<file name=\"formatters/pmdFormatter.test.ts\">" +
            "<violation begincolumn=\"1\" beginline=\"1\" priority=\"1\" rule=\"full failure\"> " +
            "</violation>" +
            "</file>" +
            "</pmd>";
        assert.equal(formatter.format(failures), expectedResult);
    });
    it("handles no failures", function () {
        var result = formatter.format([]);
        assert.deepEqual(result, "<pmd version=\"tslint\"></pmd>");
    });
});
