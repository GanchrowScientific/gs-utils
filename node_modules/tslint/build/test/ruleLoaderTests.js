var Lint = require("./lint");
describe("Rule Loader", function () {
    var path = require("path");
    var rulesDirectory = path.join(global.process.cwd(), "build/rules");
    it("loads core rules", function () {
        var validConfiguration = {
            "forin": false,
            "quotemark": "single",
            "eofline": true,
            "class-name": true,
            "no-debugger": true
        };
        var rules = Lint.loadRules(validConfiguration, {}, rulesDirectory);
        assert.equal(rules.length, 5);
    });
    it("skips invalid rules", function () {
        var invalidConfiguration = {
            "invalidConfig1": true,
            "invalidConfig2": false
        };
        var rules = Lint.loadRules(invalidConfiguration, {}, rulesDirectory);
        assert.deepEqual(rules, []);
    });
    it("doesn't ignore leading or trailing underscores or dashes", function () {
        var invalidConfiguration = {
            "_indent": 6,
            "forin_": true,
            "-quotemark": "single",
            "eofline-": true
        };
        var rules = Lint.loadRules(invalidConfiguration, {}, rulesDirectory);
        assert.deepEqual(rules, []);
    });
    it("works with rulesDirectory argument as an Array", function () {
        var validConfiguration = {
            "forin": false,
            "quotemark": "single",
            "eofline": true,
            "class-name": true,
            "no-debugger": true
        };
        var rules = Lint.loadRules(validConfiguration, {}, [rulesDirectory]);
        assert.equal(rules.length, 5);
    });
});
